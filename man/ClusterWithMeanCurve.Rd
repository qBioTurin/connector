% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClusterWithMeanCurves.R
\name{ClusterWithMeanCurve}
\alias{ClusterWithMeanCurve}
\title{Mean Cluster Curves}
\usage{
ClusterWithMeanCurve(clusterdata, data, feature, title = "",
  labels = c("", ""), save = FALSE, path = NULL)
}
\arguments{
\item{clusterdata}{Object belonging to the class funcyOutList if the model in study is the Functional Clustering Model (see \code{\link[funcy]{funcyOutList-class}}). Otherwise a list derived from fitting and clustering the data using Malthus, Gompertz or Logistic model storing the parameters and the cluster membership for each sample, the  parameters of the center and the mean curve values for each cluster (see \code{\link{FittingAndClustering}}).}

\item{data}{CONNECTORList. (see \code{\link{DataImport}})}

\item{feature}{he column name reported in the AnnotationFile containing the feature  to be investigated.}

\item{title}{The  string containing  the plot title.}

\item{labels}{The vector containing the axis names.}

\item{save}{If TRUE then the plots of the fitted and clustered growth curves are saved into two  pdf files.}

\item{path}{The folder path where the plots will be saved. If it is missing, the plots are saved in the current working  directory.}
}
\value{
ClusterWithMeanCurve returns a list with two objects, (i) a list storing the growth curves plots partitioned according to cluster membership and (ii) the cluster mean curves plot.
}
\description{
Visualizes the plots regarding the fitted and clustered data with respect to one model among FCM, Malthus, Gompertz and Logistic.
}
\details{
ADD THE COEFFS MEANING, to check the distance used in kmeans to calculate withtot
}
\examples{

GrowDataFile<-"data/1864dataset.xls"
AnnotationFile <-"data/1864info.txt"

### Merge curves and target file
CONNECTORList <- DataImport(GrowDataFile,AnnotationFile)

### Truncation

CONNECTORList<- DataTruncation(CONNECTORList,feature="Progeny",60,labels = c("time","volume","Tumor Growth"))


###  FCM

CONNECTORList.FCM <- ClusterChoice(CONNECTORList,k=c(2:6),h=2)

CONNECTORList.FCM.k4.h2<- CONNECTORList.FCM$FCM_all$`k= 4`$`h= 2`

FCMplots <- ClusterWithMeanCurve(clusterdata = CONNECTORList.FCM.k4.h2,data= CONNECTORList,feature = "Progeny",labels = c("Time","Volume"),title= " FCM model ")

###  Malthus

lower<-c(10^(-5),0)
upper<-c(10^2,10^3)
init<- list(V0=max(0.1,min(CONNECTORList$Dataset$Vol)),a=1)

Malthus1<- FittingAndClustering(data = CONNECTORList, k = 4, model="Malthus",feature="Progeny",fitting.method="optimr",lower=lower,upper=upper,init=init)
MalthusPlots1<-ClusterWithMeanCurve(clusterdata=Malthus1,data = CONNECTORList, feature = "Progeny",labels = c("Time","Volume"),title= "Optimr Malthus model")

MalthusPlots1$plotsCluster$ALL

}
\seealso{
\code{\link{ClusterChoice}},  \code{\link{FittingAndClustering}}.
}
